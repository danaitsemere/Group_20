Algorithm:

1. Create an empty bookings and rooms list.
2. A room is available if the check date for the  booking is greater than the checkout date of the room, and
the booking’s checkout date is less than the check-in date, the booking is successful.
3. Otherwise, create a new booking record with a new booking ID, check-in date, and checkout date.
4. If payment is still pending, the booking is successful.
5. Otherwise, the booking is successful.
6. Record the booking status as checked-in.
7. If the room's checked out and the booking's checked out are equal, record the booking status as checked out.




Pseudocode:
Input:
Available rooms list, empty bookings list that takes in Book ID, Guest name, Room number, check-in date, checkout date, payment status, and check-in status.
output:
room availability,book,check-in,payment status.
1. If the room doesn't exist:
  -Display "Invalid dates"
2. If checkout date <= check-in date:
  - Display "Invalid dates"
3. For every booking in the target room:
  - If new dates overlap with any existing reservation:
  -Display "room unavailable"
4. Add bookings list with payment status: unpaid, and check-in status: Not checked-in
5. Display "Booking succesfull"
6. Create a payment that takes in the guest's name.
7. If a guest hasn't paid:
8. Record as paid.
9. Display "Payment received"
10. Otherwise:
11. Display "No unpaid bookings"
12. Create a check-in that takes in the guest's name.
13. If booking exists AND paid:
14. If the current date ≥ check-in date:
   -Record as checked in
   -Display "Check-in successful."
15. Otherwise:
   -Display "Too early for check-in"
16. If unpaid:
   -Display "Payment required"
17. Otherwise:
    Display "No valid booking"
18. If unpaid:
   -Display "payment required"
19. Otherwise: Display "No valid booking"
20. Create a check-out that takes in the  guest's name
21. If a checked-in booking exists:
   -Mark as checked out.
   -Free the room
   -Display "Check-out complete."
22. Otherwise: Display "No active"reservation

